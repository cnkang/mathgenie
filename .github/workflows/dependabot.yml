name: 🤖 Dependabot Auto-merge

on:
  pull_request:
    types: [opened, synchronize]

# Only run on Dependabot PRs
concurrency:
  group: dependabot-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  # Job 1: Dependabot PR Analysis
  dependabot-analysis:
    name: 🔍 Dependabot Analysis
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: write
      issues: write

    outputs:
      auto_merge: ${{ steps.analysis.outputs.auto_merge }}
      update_type: ${{ steps.analysis.outputs.update_type }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Analyze Dependabot PR
        id: analysis
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const title = pr.title;

            // Parse version information from Dependabot PR title
            // Format: "build(deps): bump package-name from X.Y.Z to A.B.C"
            const versionRegex = /from\s+(\d+\.\d+\.\d+(?:-[\w\.-]+)?)\s+to\s+(\d+\.\d+\.\d+(?:-[\w\.-]+)?)/i;
            const match = title.match(versionRegex);

            let updateType = 'unknown';
            let fromVersion = '';
            let toVersion = '';
            let packageName = '';

            if (match) {
              fromVersion = match[1];
              toVersion = match[2];
              
              // Extract package name
              const packageMatch = title.match(/bump\s+([^\s]+)\s+from/i);
              packageName = packageMatch ? packageMatch[1] : 'unknown';

              // Parse semantic versions
              const parseVersion = (version) => {
                const parts = version.split('-')[0].split('.').map(Number);
                return { major: parts[0] || 0, minor: parts[1] || 0, patch: parts[2] || 0 };
              };

              const from = parseVersion(fromVersion);
              const to = parseVersion(toVersion);

              // Determine update type based on semantic versioning
              if (to.major > from.major) {
                updateType = 'major';
              } else if (to.minor > from.minor) {
                updateType = 'minor';
              } else if (to.patch > from.patch) {
                updateType = 'patch';
              } else {
                updateType = 'patch'; // Default for pre-release or other updates
              }
            }

            // Determine if this is a dev dependency
            const isDevDependency = title.includes('deps-dev') || title.includes('devDependencies');
            
            // Auto-merge criteria (more permissive for dev dependencies)
            const autoMerge = updateType === 'patch' || 
                             (updateType === 'minor' && isDevDependency) ||
                             (updateType === 'minor' && !title.toLowerCase().includes('breaking'));

            // Determine breaking change risk
            let breakingRisk = 'Low';
            if (updateType === 'major') {
              breakingRisk = 'High';
            } else if (updateType === 'minor' && !isDevDependency) {
              breakingRisk = 'Medium';
            }

            // Use environment file for outputs (GitHub Actions new method)
            const fs = require('fs');
            fs.appendFileSync(process.env.GITHUB_OUTPUT, `update_type=${updateType}\n`);
            fs.appendFileSync(process.env.GITHUB_OUTPUT, `auto_merge=${autoMerge.toString()}\n`);

            // Add labels
            const labels = ['dependencies', `${updateType}-update`];
            if (isDevDependency) labels.push('dev-dependency');
            if (breakingRisk === 'High') labels.push('breaking-change-risk');

            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: labels
            });

            // Add comment with detailed analysis
            const comment = `
            ## 🤖 Dependabot PR Analysis

            - **Package**: \`${packageName}\`
            - **Update Type**: ${updateType} (${fromVersion} → ${toVersion})
            - **Dependency Type**: ${isDevDependency ? 'Development' : 'Production'}
            - **Breaking Change Risk**: ${breakingRisk}
            - **Auto-merge Eligible**: ${autoMerge ? '✅ Yes' : '❌ No'}

            ${autoMerge ? 
              '✅ This PR is eligible for auto-merge and will be automatically merged when all required checks pass.' : 
              `⚠️ This PR requires manual review due to ${updateType === 'major' ? 'major version update' : 'potential compatibility concerns'}.`
            }

            ${updateType === 'major' ? 
              '📋 **Major Update**: Please review the changelog for breaking changes.' : 
              updateType === 'minor' && !isDevDependency ? 
              '📋 **Minor Update**: New features may have been added. Review for compatibility.' :
              '📋 **Patch Update**: Bug fixes and security updates.'
            }
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: comment
            });

  # Job 2: Run CI for Dependabot PRs
  dependabot-ci:
    name: 🧪 Dependabot CI
    runs-on: ubuntu-latest
    needs: dependabot-analysis
    if: github.actor == 'dependabot[bot]'
    timeout-minutes: 20
    permissions:
      contents: read

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: 📦 Enable pnpm via Corepack
        run: |
          corepack enable
          corepack install

      - name: 📦 Setup pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: 📋 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Run linting
        run: pnpm lint

      - name: 🧪 Run tests
        run: pnpm test:unit

      - name: 🏗️ Build application
        run: pnpm build

      - name: 🔒 Security audit
        run: pnpm audit --audit-level moderate
        continue-on-error: true

  # Job 3: Enable auto-merge for eligible PRs
  dependabot-auto-merge:
    name: 🔄 Enable Auto-merge
    runs-on: ubuntu-latest
    needs: [dependabot-analysis, dependabot-ci]
    if: |
      github.actor == 'dependabot[bot]' && 
      needs.dependabot-analysis.outputs.auto_merge == 'true' &&
      needs.dependabot-ci.result == 'success'
    timeout-minutes: 5
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: 🤖 Enable Auto-merge
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;

            // Add a comment before enabling auto-merge
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: '🤖 Enabling auto-merge for this safe dependency update. The PR will be automatically merged once all required checks pass.'
            });

            // Enable auto-merge using GitHub's native functionality
            try {
              await github.rest.pulls.enableAutoMerge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                merge_method: 'squash',
                commit_title: `${pr.title} (#${pr.number})`,
                commit_message: 'Auto-merged by Dependabot workflow after successful CI checks'
              });
              
              console.log('✅ Auto-merge enabled successfully');
              
              // Add success comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: '✅ Auto-merge enabled! This PR will be automatically merged when all required status checks pass and any required reviews are approved.'
              });
              
            } catch (error) {
              console.log('❌ Failed to enable auto-merge:', error.message);
              
              // Provide detailed error information
              let errorMessage = `❌ Failed to enable auto-merge: ${error.message}

**Possible reasons:**`;

              if (error.status === 422) {
                errorMessage += `
- Auto-merge is not enabled for this repository
- Branch protection rules may prevent auto-merge
- PR may have conflicts or failing checks
- Repository settings may restrict auto-merge`;
              } else if (error.status === 403) {
                errorMessage += `
- Insufficient permissions to enable auto-merge
- Repository may not allow auto-merge for this user`;
              } else {
                errorMessage += `
- Unexpected error occurred
- Check repository settings and branch protection rules`;
              }

              errorMessage += `

**Next steps:**
1. Check if auto-merge is enabled in repository settings
2. Verify branch protection rules allow auto-merge
3. Ensure all required status checks are configured
4. Consider manual merge if auto-merge is not available

**Manual merge:** You can safely merge this PR manually as it passed all CI checks and was identified as a safe dependency update.`;

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: errorMessage
              });
            }

  # Job 4: Notify on manual review required
  dependabot-manual-review:
    name: 📢 Manual Review Required
    runs-on: ubuntu-latest
    needs: [dependabot-analysis, dependabot-ci]
    if: |
      github.actor == 'dependabot[bot]' && 
      needs.dependabot-analysis.outputs.auto_merge == 'false' &&
      needs.dependabot-ci.result == 'success'
    timeout-minutes: 5
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: 📢 Request manual review
        uses: actions/github-script@v7
        env:
          UPDATE_TYPE: ${{ needs.dependabot-analysis.outputs.update_type }}
        with:
          script: |
            const pr = context.payload.pull_request;
            const updateType = process.env.UPDATE_TYPE;

            // Request review from maintainers (update with actual GitHub usernames)
            const maintainers = []; // Add actual maintainer usernames here

            try {
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                reviewers: maintainers
              });
            } catch (error) {
              console.log('Could not request reviewers:', error.message);
            }

            // Add comment
            const reviewReason = updateType === 'major' ? 
              'Major version update - may contain breaking changes' :
              updateType === 'minor' ? 
              'Minor version update for production dependency - may introduce new features' :
              'Update requires manual verification';

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: `
              ## 👀 Manual Review Required
              
              This Dependabot PR requires manual review due to:
              - **Update Type**: ${updateType}
              - **Review Reason**: ${reviewReason}
              
              Please review the changes carefully before merging.
              
              ✅ **CI Status**: All checks passed
              
              **Recommended Actions:**
              ${updateType === 'major' ? 
                '- Review the package changelog for breaking changes\n- Test the application thoroughly\n- Update any affected code' :
                '- Review the package changelog for new features\n- Verify compatibility with existing code'
              }
              `
            });

  # Job 5: Handle CI failures
  dependabot-ci-failure:
    name: ❌ CI Failure Handler
    runs-on: ubuntu-latest
    needs: [dependabot-analysis, dependabot-ci]
    if: |
      github.actor == 'dependabot[bot]' && 
      needs.dependabot-ci.result == 'failure'
    timeout-minutes: 5
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: ❌ Handle CI failure
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: `
              ## ❌ CI Checks Failed
              
              The automated CI checks have failed for this Dependabot PR.
              
              **Next Steps:**
              1. Review the failed checks in the Actions tab
              2. Determine if the failure is related to the dependency update
              3. If it's a legitimate issue, consider:
                 - Updating the dependency manually with fixes
                 - Skipping this update temporarily
                 - Investigating compatibility issues
              
              **Workflow Run**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
              `
            });

            // Add failure label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: ['ci-failure', 'needs-investigation']
            });
